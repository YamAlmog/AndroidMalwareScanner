name: Build and tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' # Adjust to your desired Python version

    - name: Install dependencies for checks
      run: |
        python -m pip install --upgrade pip
        pip install black flake8

    # Step 1: Run Python Black formatter check
    - name: Run Black formatter check
      run: black --check .

    # Step 2: Run Python linter (flake8) check
    - name: Run Flake8 linter check
      run: flake8 .

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Build services
      run: docker-compose -f docker-compose.yml build

    - name: Run tests with test_runner
      run: |
        mkdir -p test-reports
        docker-compose -f docker-compose.yml --profile test up --abort-on-container-exit test_runner
        docker cp test_runner:/app/test-reports/results.xml ./test-reports/results.xml || \
        (mkdir -p test-reports && echo "<testsuites></testsuites>" > test-reports/results.xml)

    - name: Upload test results as artifact
      if: always() # Always run this step, even if previous steps fail
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-reports/results.xml

    - name: Visualize test results
      if: always() # Always run this step, even if previous steps fail
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        path: test-reports/results.xml
        reporter: java-junit # Corrected reporter type for JUnit

    - name: Clean up
      if: always()
      run: docker-compose -f docker-compose.yml down
