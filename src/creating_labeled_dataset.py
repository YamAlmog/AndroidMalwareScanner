import os
from pyaxmlparser import APK
import sys
import logging

logging.basicConfig(filename='app.log', filemode='w',  level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')

permission_distribution_dict = {}
all_files = []

'''
functionality: extract file paths
input: get directory path
output: return list of all the files path + name in this dir
'''
def get_files_path(directory):
    file_paths = []
    # browse the directory and its subdirectories
    for root, dirs, files in os.walk(directory):
        for file in files:    
            file_path = os.path.join(root, file)
            file_paths.append((file_path, file))
        return file_paths

'''
functionality: extract permissions from AndroidManifest.xml
input: path to a specific apk file
output: list of this apk permissions
'''
def get_apk_permissions(apk_path):
    apk = APK(apk_path)
    # get_permissions() -> permissions used during runtime & get_declared_permissions() -> explicitly declared in the AndroidManifest.xml file
    permissions = apk.get_declared_permissions()+ apk.get_permissions()
    return permissions


'''
functionality: updating permission distribution dict 
input: permission list 
output: None, just update global dict
'''
def permission_distribution(permission_list):
    global permission_distribution_dict
    for permission in permission_list:
        if permission in permission_distribution_dict:
            permission_distribution_dict[permission] +=1
        else:
            permission_distribution_dict[permission] = 1




'''
functionality: creates apk permissions dictionary
input: directory path
output: permission dictionary for apk files
'''
def create_permission_dict(directory_path):
    permission_dict = {}
    file_tuples_list = get_files_path(directory_path)
    for file in file_tuples_list:
        all_files.append(file[1])
        permissions = get_apk_permissions(file[0])
        # Update permission distribution dictionary
        permission_distribution(permissions)
        permission_dict[file[1]] = permissions
    return permission_dict




def main():
    global permission_distribution_dict
    dir_path = "C:/Projects/Python/Android/AndroidMalwareScanner/data"
    apk_permission_dict = create_permission_dict(dir_path)
    logging.debug(apk_permission_dict)

    sorted_permission_dict = dict(sorted(permission_distribution_dict.items(), key=lambda item: item[1], reverse=True))
    logging.debug(sorted_permission_dict)

if __name__ == "__main__":
    main()




