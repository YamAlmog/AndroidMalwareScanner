from apk_data_collector import ApkCollector
from classifier import Classifier
from creating_file_vector import FileVectorCreator
import argparse
import os
from zipfile import BadZipFile

POSITIVE_LABEL_DIR = "Benign"
apk_collector = ApkCollector(POSITIVE_LABEL_DIR)
CSV_PATH = "android_apps_df.csv"


def main():
    try:

        parser = argparse.ArgumentParser(description='This program classify apk file as malicious or benign')
        parser.add_argument('FILE_PATH', type=str, help='The path to the apk file')
        
        args = parser.parse_args()
        user_file_path = args.FILE_PATH
    
        if not os.path.isfile(user_file_path):
            raise argparse.ArgumentTypeError(f"The file does not exist, Or incorrect path.")
        
        file_permissions = apk_collector.get_apk_permissions(user_file_path)
        
        vector_creator = FileVectorCreator(CSV_PATH, file_permissions)
        file_to_classify = vector_creator.create_vector()
        
        classifier = Classifier(CSV_PATH)
        classification, probability = classifier.predict_file(file_to_classify)
        if classification == 1:
            print(f"Your file is Malicious in probavility of {probability}")
        else:
            print(f"Your file is Benign in probavility of {1-probability}")
        
        print(f"Your file permissions are:\n{file_permissions}")
    
    except argparse.ArgumentTypeError as e:
        print(e)
    except IOError as e:
        print(e)
    except BadZipFile as e:
        print(e)
    except Exception as e:
        print(f"Unknown Error occurred:{e}")
    
if __name__ == "__main__":
    main()