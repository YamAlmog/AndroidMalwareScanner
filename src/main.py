from apk_analyzer import ApkAnalyzer
from classifier import Classifier
from creating_file_vector import FileVectorCreator
import argparse
import os
from errors import ApkAnalyzerError
import pandas as pd
import numpy as np
import logging

logging.basicConfig(filename='app.log', level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')


CSV_PATH = "dataframes/dataframe.csv"
COMMON_PERMISSIONS_PATH = "dataframes/most_common_permission.csv"

def main():
    try:

        parser = argparse.ArgumentParser(description='This program classify apk file as malicious or benign')
        parser.add_argument('--path', type=str, help='The path to the apk file')

        args = parser.parse_args()
        user_file_path = args.path
        
        if not os.path.isfile(user_file_path):
            raise argparse.ArgumentTypeError(f"The file does not exist, Or incorrect path.")
        
        
        most_common_permissions = pd.read_csv(COMMON_PERMISSIONS_PATH, header=None)
        permissions_list = most_common_permissions[0].tolist()
        permissions_list = permissions_list[1:]
        
        apk_analyzer = ApkAnalyzer(permissions_list)

        file_permissions = apk_analyzer.get_file_permissions(user_file_path)
        file_feature_vector = apk_analyzer.get_feature_vector(user_file_path)

        classifier = Classifier(CSV_PATH)
        if file_feature_vector:  
            
            classification, probability = classifier.predict_file(file_feature_vector)
            if classification == 1:
                print(f"Your file is Malicious in probability of {probability}")
            else:
                print(f"Your file is Benign in probability of {1-probability}")

            print(f"\nYour file permissions are: \n {file_permissions}")
        else:
            raise ApkAnalyzerError(f"There was an error getting permissions of file {user_file_path}")

    
    except argparse.ArgumentTypeError as e:
        print(e)
    except ApkAnalyzerError as e:
        print(e)
    except Exception as e:
        raise e
        print(f"Unknown Error occurred:{e}")
    
if __name__ == "__main__":
    main()