import psycopg2
from errors import CacheException
import json
import os 
from typing import Optional, Tuple

class FilesCacheManager:
    def __init__(self) -> None:
        self.db_url = os.getenv("DATABASE_URL")

        # if table of android_apps_cache_files doesn't exist, create it 
        create_department_table = '''
                                        CREATE TABLE IF NOT EXISTS android_apps_cache_files (
                                        file_hash VARCHAR(255) PRIMARY KEY,
                                        verdict VARCHAR(255),
                                        probability double precision,
                                        permissions text
                                    );  
                                    '''
        with psycopg2.connect(self.db_url) as conn:                          
            cursor = conn.cursor()
            cursor.execute(create_department_table)


    
    def get_file_details_from_db(self, file_hash:str) -> Optional[Tuple]:
        try:
            with psycopg2.connect(self.db_url) as conn:
                cursor = conn.cursor()
                cursor.execute("SELECT * FROM android_apps_cache_files WHERE file_hash = %s", (file_hash,))
                existing_item = cursor.fetchone()
                cursor.close()
                return existing_item
        except Exception as e:
            raise CacheException(f"Error occurred while run get_file_details_from_db: {e}")



    def insert_results_to_db(self, file_hash:str, verdict:str, probability:float, permissions:str):
        try:    
            with psycopg2.connect(self.db_url) as conn:
                cursor = conn.cursor()
                query = f"INSERT INTO android_apps_cache_files (file_hash, verdict, probability, permissions) VALUES ('{file_hash}','{verdict}',{probability},'{permissions}');"
    
                cursor.execute(query)
                conn.commit()
                cursor.close()
        except Exception as e:
            raise CacheException(f"Error occurred while run insert_results_to_db: {e}")





    
    
    


    
   

    